{
  "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "lending_addressNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "lending_notEnoughTimePassed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "lending_outOfReserve",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "lending_reserveNotAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "amoutLended",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowingAPY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmedYield",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getYield",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isTime",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastYieldFarmedTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAPY",
          "type": "uint256"
        }
      ],
      "name": "setBorrowingAPY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yield",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "yieldTaken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcaf2dabef2e82d00d91a8e079dd5870e5e793b7d1b96e733237209c09972de94",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "transactionIndex": 0,
    "gasUsed": "1002441",
    "logsBloom": "0x
    "blockHash": "0x1ffadc1fbda39c3951207f7aab315724d204f5ee875686c8354c109e3047394c",
    "transactionHash": "0xcaf2dabef2e82d00d91a8e079dd5870e5e793b7d1b96e733237209c09972de94",
    "logs": [],
    "blockNumber": 8,
    "cumulativeGasUsed": "1002441",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9"
  ],
  "numDeployments": 1,
  "solcInputHash": "30e751f29dc882e93d446105100fc085",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"lending_addressNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"lending_notEnoughTimePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"lending_outOfReserve\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"lending_reserveNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"amoutLended\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowingAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmedYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"getYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastYieldFarmedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAPY\",\"type\":\"uint256\"}],\"name\":\"setBorrowingAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"yieldTaken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements lending and yield farming functionalities for a specific ERC20 token. This contract allows tokens to be lent out and borrowed, tracks yield farming activities, and allows for the accumulation and withdrawal of yield based on predefined APY.\",\"kind\":\"dev\",\"methods\":{\"borrow(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to borrow.\"}},\"constructor\":{\"params\":{\"_token\":\"The ERC20 token address for lending and borrowing.\"}},\"getYield(address,uint256)\":{\"params\":{\"tokenAmount\":\"The amount of tokens used for calculating the user's share of the yield.\",\"user\":\"The address of the user farming yield.\"},\"returns\":{\"_0\":\"uint256 The amount of yield available for the user.\"}},\"isTime(address)\":{\"params\":{\"user\":\"The address of the user.\"},\"returns\":{\"_0\":\"bool True if enough time has passed, false otherwise.\"}},\"lend(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to lend.\"}},\"setBorrowingAPY(uint256)\":{\"params\":{\"newAPY\":\"The new APY value.\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to withdraw from the reserve.\"}}},\"title\":\"Lending\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(uint256)\":{\"notice\":\"Allows the owner to borrow tokens from the reserve.\"},\"getYield(address,uint256)\":{\"notice\":\"Calculates and returns the available yield for a user. This function updates the yield taken and farmed yield accordingly.\"},\"isTime(address)\":{\"notice\":\"Checks if enough time has passed for a user to farm yield again.\"},\"lend(uint256)\":{\"notice\":\"Allows the owner to lend tokens to the contract.\"},\"setBorrowingAPY(uint256)\":{\"notice\":\"Sets the borrowing APY.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws tokens from the reserve. This function allows the owner to withdraw tokens from the available reserve, reducing the reserve balance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lending/Lending.sol\":\"Lending\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/Lending/Lending.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\n\\npragma solidity ^0.8.9;\\n\\n// OpenZeppelin's ERC20 interface for interactions with ERC20 tokens.\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\n\\n// Custom errors for specific failure conditions.\\nerror lending_outOfReserve();\\nerror lending_addressNotAllowed();\\nerror lending_reserveNotAvailable();\\nerror lending_notEnoughTimePassed();\\n\\n/**\\n * @title Lending\\n * @dev Implements lending and yield farming functionalities for a specific ERC20 token.\\n * This contract allows tokens to be lent out and borrowed, tracks yield farming activities,\\n * and allows for the accumulation and withdrawal of yield based on predefined APY.\\n */\\ncontract Lending {\\n    // The ERC20 token used for lending and borrowing.\\n    IERC20 public token;\\n\\n    // Address of the owner contract.\\n    address public ownerContract;\\n\\n    // Total amount of tokens lent out.\\n    uint256 public amoutLended;\\n\\n    // Available reserve for borrowing.\\n    uint256 public reserve;\\n\\n    // Annual Percentage Yield for borrowing.\\n    uint256 public borrowingAPY;\\n\\n    // Total yield generated.\\n    uint256 public yield;\\n\\n    // Yield already farmed.\\n    uint256 public farmedYield;\\n\\n    // Mapping of addresses to their last yield farming timestamp.\\n    mapping(address => uint256) public lastYieldFarmedTime;\\n\\n    // Mapping of addresses to the amount of yield they have taken.\\n    mapping(address => uint256) public yieldTaken;\\n\\n    /**\\n     * @dev Ensures that only the owner contract can call the modified function.\\n     */\\n    modifier onlyOwner() {\\n        if (msg.sender != ownerContract) {\\n            revert lending_addressNotAllowed();\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @param _token The ERC20 token address for lending and borrowing.\\n     */\\n    constructor(address _token) {\\n        token = IERC20(_token);\\n        ownerContract = msg.sender;\\n    }\\n\\n    /**\\n     * @notice Allows the owner to borrow tokens from the reserve.\\n     * @param amount The amount of tokens to borrow.\\n     */\\n    function borrow(uint256 amount) public onlyOwner {\\n        if (reserve - amount < 0) {\\n            revert lending_outOfReserve();\\n        }\\n        token.transfer(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @notice Allows the owner to lend tokens to the contract.\\n     * @param amount The amount of tokens to lend.\\n     */\\n    function lend(uint256 amount) public onlyOwner {\\n        token.transferFrom(msg.sender, address(this), amount);\\n        reserve += amount;\\n    }\\n\\n    /**\\n     * @notice Sets the borrowing APY.\\n     * @param newAPY The new APY value.\\n     */\\n    function setBorrowingAPY(uint256 newAPY) public onlyOwner {\\n        borrowingAPY = newAPY;\\n    }\\n\\n    /**\\n     * @notice Checks if enough time has passed for a user to farm yield again.\\n     * @param user The address of the user.\\n     * @return bool True if enough time has passed, false otherwise.\\n     */\\n    function isTime(address user) public view returns (bool) {\\n        lastYieldFarmedTime[user];\\n        uint256 currentStamp = block.timestamp;\\n        if ((lastYieldFarmedTime[user] + 1 days) < currentStamp) {\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @notice Withdraws tokens from the reserve.\\n     * This function allows the owner to withdraw tokens from the available reserve, reducing the reserve balance.\\n     * @param amount The amount of tokens to withdraw from the reserve.\\n     */\\n    function withdraw(uint256 amount) public onlyOwner {\\n        if (reserve - amount < 0) {\\n            revert lending_reserveNotAvailable();\\n        }\\n        token.transfer(msg.sender, amount);\\n        reserve -= amount;\\n    }\\n\\n    /**\\n     * @notice Calculates and returns the available yield for a user.\\n     * This function updates the yield taken and farmed yield accordingly.\\n     * @param user The address of the user farming yield.\\n     * @param tokenAmount The amount of tokens used for calculating the user's share of the yield.\\n     * @return uint256 The amount of yield available for the user.\\n     */\\n    function getYield(\\n        address user,\\n        uint256 tokenAmount\\n    ) public onlyOwner returns (uint256) {\\n        if (isTime(user) == false) {\\n            revert lending_notEnoughTimePassed();\\n        }\\n        lastYieldFarmedTime[user] = block.timestamp; // Reentrancy guard\\n        uint256 yieldSoFar = yieldTaken[user];\\n        uint256 userLiquidity = (tokenAmount * 100) / amoutLended;\\n        uint256 availableYield = ((yield -\\n            ((yieldSoFar * 100) / userLiquidity)) * userLiquidity) / 100;\\n\\n        if (availableYield > yield - farmedYield) {\\n            revert lending_notEnoughTimePassed(); // IN CASE THERE IS A LOT OF PEOPLE GETTING YIELD AT ONCE AND RATIOS GET CHANGED TOO MUCH\\n        }\\n        yieldTaken[msg.sender] += availableYield;\\n        farmedYield += availableYield;\\n        return availableYield;\\n    }\\n}\\n\",\"keccak256\":\"0x17872742894ab2ac12f4fb20f81808285d9bf69d319eb85110cd7fda32f74730\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620011c0380380620011c0833981810160405281019062000037919062000129565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b611055806200016b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a2b2c32a11610097578063ed433abc11610066578063ed433abc14610260578063f88cc4a21461027e578063fc0c546a146102ae578063ffebfc8c146102cc576100f5565b8063a2b2c32a146101ec578063a6aa57ce1461020a578063c5ebeaec14610226578063cd3293de14610242576100f5565b80636140dfd0116100d35780636140dfd0146101645780637f74ac15146101825780639770b125146101a05780639a61c36a146101bc576100f5565b806328593984146100fa5780632e1a7d4d1461011857806359eec95b14610134575b600080fd5b6101026102fc565b60405161010f9190610bd5565b60405180910390f35b610132600480360381019061012d9190610c21565b610302565b005b61014e60048036038101906101499190610cac565b61049b565b60405161015b9190610cf4565b60405180910390f35b61016c61054c565b6040516101799190610bd5565b60405180910390f35b61018a610552565b6040516101979190610d1e565b60405180910390f35b6101ba60048036038101906101b59190610c21565b610578565b005b6101d660048036038101906101d19190610cac565b610609565b6040516101e39190610bd5565b60405180910390f35b6101f4610621565b6040516102019190610bd5565b60405180910390f35b610224600480360381019061021f9190610c21565b610627565b005b610240600480360381019061023b9190610c21565b61077a565b005b61024a6108fa565b6040516102579190610bd5565b60405180910390f35b610268610900565b6040516102759190610bd5565b60405180910390f35b61029860048036038101906102939190610d39565b610906565b6040516102a59190610bd5565b60405180910390f35b6102b6610b80565b6040516102c39190610dd8565b60405180910390f35b6102e660048036038101906102e19190610cac565b610ba4565b6040516102f39190610bd5565b60405180910390f35b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610389576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816003546103999190610e22565b10156103d1576040517f5a6c8ab300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161042c929190610e56565b602060405180830381600087803b15801561044657600080fd5b505af115801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e9190610eab565b5080600360008282546104919190610e22565b9250508190555050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205060004290508062015180600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105319190610ed8565b1015610541576001915050610547565b60009150505b919050565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ff576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060048190555050565b60086020528060005260406000206000915090505481565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ae576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161070b93929190610f2e565b602060405180830381600087803b15801561072557600080fd5b505af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d9190610eab565b5080600360008282546107709190610ed8565b9250508190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610801576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816003546108119190610e22565b1015610849576040517f810ffca300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108a4929190610e56565b602060405180830381600087803b1580156108be57600080fd5b505af11580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f69190610eab565b5050565b60035481565b60065481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098f576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000151561099c8461049b565b151514156109d6576040517f1fa8d33700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b42600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600254606485610a709190610f65565b610a7a9190610fee565b9050600060648283606486610a8f9190610f65565b610a999190610fee565b600554610aa69190610e22565b610ab09190610f65565b610aba9190610fee565b9050600654600554610acc9190610e22565b811115610b05576040517f1fa8d33700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b549190610ed8565b925050819055508060066000828254610b6d9190610ed8565b9250508190555080935050505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915090505481565b6000819050919050565b610bcf81610bbc565b82525050565b6000602082019050610bea6000830184610bc6565b92915050565b600080fd5b610bfe81610bbc565b8114610c0957600080fd5b50565b600081359050610c1b81610bf5565b92915050565b600060208284031215610c3757610c36610bf0565b5b6000610c4584828501610c0c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c7982610c4e565b9050919050565b610c8981610c6e565b8114610c9457600080fd5b50565b600081359050610ca681610c80565b92915050565b600060208284031215610cc257610cc1610bf0565b5b6000610cd084828501610c97565b91505092915050565b60008115159050919050565b610cee81610cd9565b82525050565b6000602082019050610d096000830184610ce5565b92915050565b610d1881610c6e565b82525050565b6000602082019050610d336000830184610d0f565b92915050565b60008060408385031215610d5057610d4f610bf0565b5b6000610d5e85828601610c97565b9250506020610d6f85828601610c0c565b9150509250929050565b6000819050919050565b6000610d9e610d99610d9484610c4e565b610d79565b610c4e565b9050919050565b6000610db082610d83565b9050919050565b6000610dc282610da5565b9050919050565b610dd281610db7565b82525050565b6000602082019050610ded6000830184610dc9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e2d82610bbc565b9150610e3883610bbc565b925082821015610e4b57610e4a610df3565b5b828203905092915050565b6000604082019050610e6b6000830185610d0f565b610e786020830184610bc6565b9392505050565b610e8881610cd9565b8114610e9357600080fd5b50565b600081519050610ea581610e7f565b92915050565b600060208284031215610ec157610ec0610bf0565b5b6000610ecf84828501610e96565b91505092915050565b6000610ee382610bbc565b9150610eee83610bbc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f2357610f22610df3565b5b828201905092915050565b6000606082019050610f436000830186610d0f565b610f506020830185610d0f565b610f5d6040830184610bc6565b949350505050565b6000610f7082610bbc565b9150610f7b83610bbc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fb457610fb3610df3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ff982610bbc565b915061100483610bbc565b92508261101457611013610fbf565b5b82820490509291505056fea2646970667358221220942c060d4dbc95bf37f56c773b3f44adc43b39367c3b1f429f712691962dee0564736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a2b2c32a11610097578063ed433abc11610066578063ed433abc14610260578063f88cc4a21461027e578063fc0c546a146102ae578063ffebfc8c146102cc576100f5565b8063a2b2c32a146101ec578063a6aa57ce1461020a578063c5ebeaec14610226578063cd3293de14610242576100f5565b80636140dfd0116100d35780636140dfd0146101645780637f74ac15146101825780639770b125146101a05780639a61c36a146101bc576100f5565b806328593984146100fa5780632e1a7d4d1461011857806359eec95b14610134575b600080fd5b6101026102fc565b60405161010f9190610bd5565b60405180910390f35b610132600480360381019061012d9190610c21565b610302565b005b61014e60048036038101906101499190610cac565b61049b565b60405161015b9190610cf4565b60405180910390f35b61016c61054c565b6040516101799190610bd5565b60405180910390f35b61018a610552565b6040516101979190610d1e565b60405180910390f35b6101ba60048036038101906101b59190610c21565b610578565b005b6101d660048036038101906101d19190610cac565b610609565b6040516101e39190610bd5565b60405180910390f35b6101f4610621565b6040516102019190610bd5565b60405180910390f35b610224600480360381019061021f9190610c21565b610627565b005b610240600480360381019061023b9190610c21565b61077a565b005b61024a6108fa565b6040516102579190610bd5565b60405180910390f35b610268610900565b6040516102759190610bd5565b60405180910390f35b61029860048036038101906102939190610d39565b610906565b6040516102a59190610bd5565b60405180910390f35b6102b6610b80565b6040516102c39190610dd8565b60405180910390f35b6102e660048036038101906102e19190610cac565b610ba4565b6040516102f39190610bd5565b60405180910390f35b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610389576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816003546103999190610e22565b10156103d1576040517f5a6c8ab300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161042c929190610e56565b602060405180830381600087803b15801561044657600080fd5b505af115801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e9190610eab565b5080600360008282546104919190610e22565b9250508190555050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205060004290508062015180600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105319190610ed8565b1015610541576001915050610547565b60009150505b919050565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ff576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060048190555050565b60086020528060005260406000206000915090505481565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ae576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161070b93929190610f2e565b602060405180830381600087803b15801561072557600080fd5b505af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d9190610eab565b5080600360008282546107709190610ed8565b9250508190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610801576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816003546108119190610e22565b1015610849576040517f810ffca300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108a4929190610e56565b602060405180830381600087803b1580156108be57600080fd5b505af11580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f69190610eab565b5050565b60035481565b60065481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098f576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000151561099c8461049b565b151514156109d6576040517f1fa8d33700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b42600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600254606485610a709190610f65565b610a7a9190610fee565b9050600060648283606486610a8f9190610f65565b610a999190610fee565b600554610aa69190610e22565b610ab09190610f65565b610aba9190610fee565b9050600654600554610acc9190610e22565b811115610b05576040517f1fa8d33700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b549190610ed8565b925050819055508060066000828254610b6d9190610ed8565b9250508190555080935050505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915090505481565b6000819050919050565b610bcf81610bbc565b82525050565b6000602082019050610bea6000830184610bc6565b92915050565b600080fd5b610bfe81610bbc565b8114610c0957600080fd5b50565b600081359050610c1b81610bf5565b92915050565b600060208284031215610c3757610c36610bf0565b5b6000610c4584828501610c0c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c7982610c4e565b9050919050565b610c8981610c6e565b8114610c9457600080fd5b50565b600081359050610ca681610c80565b92915050565b600060208284031215610cc257610cc1610bf0565b5b6000610cd084828501610c97565b91505092915050565b60008115159050919050565b610cee81610cd9565b82525050565b6000602082019050610d096000830184610ce5565b92915050565b610d1881610c6e565b82525050565b6000602082019050610d336000830184610d0f565b92915050565b60008060408385031215610d5057610d4f610bf0565b5b6000610d5e85828601610c97565b9250506020610d6f85828601610c0c565b9150509250929050565b6000819050919050565b6000610d9e610d99610d9484610c4e565b610d79565b610c4e565b9050919050565b6000610db082610d83565b9050919050565b6000610dc282610da5565b9050919050565b610dd281610db7565b82525050565b6000602082019050610ded6000830184610dc9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e2d82610bbc565b9150610e3883610bbc565b925082821015610e4b57610e4a610df3565b5b828203905092915050565b6000604082019050610e6b6000830185610d0f565b610e786020830184610bc6565b9392505050565b610e8881610cd9565b8114610e9357600080fd5b50565b600081519050610ea581610e7f565b92915050565b600060208284031215610ec157610ec0610bf0565b5b6000610ecf84828501610e96565b91505092915050565b6000610ee382610bbc565b9150610eee83610bbc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f2357610f22610df3565b5b828201905092915050565b6000606082019050610f436000830186610d0f565b610f506020830185610d0f565b610f5d6040830184610bc6565b949350505050565b6000610f7082610bbc565b9150610f7b83610bbc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fb457610fb3610df3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ff982610bbc565b915061100483610bbc565b92508261101457611013610fbf565b5b82820490509291505056fea2646970667358221220942c060d4dbc95bf37f56c773b3f44adc43b39367c3b1f429f712691962dee0564736f6c63430008090033",
  "devdoc": {
    "details": "Implements lending and yield farming functionalities for a specific ERC20 token. This contract allows tokens to be lent out and borrowed, tracks yield farming activities, and allows for the accumulation and withdrawal of yield based on predefined APY.",
    "kind": "dev",
    "methods": {
      "borrow(uint256)": {
        "params": {
          "amount": "The amount of tokens to borrow."
        }
      },
      "constructor": {
        "params": {
          "_token": "The ERC20 token address for lending and borrowing."
        }
      },
      "getYield(address,uint256)": {
        "params": {
          "tokenAmount": "The amount of tokens used for calculating the user's share of the yield.",
          "user": "The address of the user farming yield."
        },
        "returns": {
          "_0": "uint256 The amount of yield available for the user."
        }
      },
      "isTime(address)": {
        "params": {
          "user": "The address of the user."
        },
        "returns": {
          "_0": "bool True if enough time has passed, false otherwise."
        }
      },
      "lend(uint256)": {
        "params": {
          "amount": "The amount of tokens to lend."
        }
      },
      "setBorrowingAPY(uint256)": {
        "params": {
          "newAPY": "The new APY value."
        }
      },
      "withdraw(uint256)": {
        "params": {
          "amount": "The amount of tokens to withdraw from the reserve."
        }
      }
    },
    "title": "Lending",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "borrow(uint256)": {
        "notice": "Allows the owner to borrow tokens from the reserve."
      },
      "getYield(address,uint256)": {
        "notice": "Calculates and returns the available yield for a user. This function updates the yield taken and farmed yield accordingly."
      },
      "isTime(address)": {
        "notice": "Checks if enough time has passed for a user to farm yield again."
      },
      "lend(uint256)": {
        "notice": "Allows the owner to lend tokens to the contract."
      },
      "setBorrowingAPY(uint256)": {
        "notice": "Sets the borrowing APY."
      },
      "withdraw(uint256)": {
        "notice": "Withdraws tokens from the reserve. This function allows the owner to withdraw tokens from the available reserve, reducing the reserve balance."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3495,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)1089"
      },
      {
        "astId": 3497,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "ownerContract",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3499,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "amoutLended",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 3501,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "reserve",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 3503,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "borrowingAPY",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 3505,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "yield",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 3507,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "farmedYield",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 3511,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "lastYieldFarmedTime",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3515,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "yieldTaken",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)1089": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}